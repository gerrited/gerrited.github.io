<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Grafana on gerrit.codes</title><link>https://gerrit.codes/tags/grafana/</link><description>Recent content in Grafana on gerrit.codes</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><lastBuildDate>Tue, 03 Oct 2023 20:50:58 +0200</lastBuildDate><atom:link href="https://gerrit.codes/tags/grafana/index.xml" rel="self" type="application/rss+xml"/><item><title>Internet Monitoring mit K8s und Grafana</title><link>https://gerrit.codes/posts/2023/10/internet-monitoring-mit-kubernetes-und-grafana/</link><pubDate>Tue, 03 Oct 2023 20:50:58 +0200</pubDate><guid>https://gerrit.codes/posts/2023/10/internet-monitoring-mit-kubernetes-und-grafana/</guid><description>&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>Nach dem Wechsel auf Glasfaser, hatte ich zwischendurch Ruckler beim Streaming. Das WLAN selbst war gut erreichbar. Das konnte ich mittels einer WLAN Analyzer App kontrollieren.&lt;/p>
&lt;p>Die Daten zur Internetnutzung waren nicht ausreichend, um dort ein Problem feststellen zu können. Entsprechend habe ich selbst an einer Lösung gearbeitet, um die Internetgeschwindigkeit regelmäßig zu messen und sie visuell aufzubereiten.&lt;/p>
&lt;h2 id="anforderungen">Anforderungen&lt;/h2>
&lt;ul>
&lt;li>Die Messung soll auf dem &lt;a href="https://gerrit.codes/posts/2022/01/raspberry-pi-cluster-mit-k3s/">Raspberry Pi Kubernetes Cluster&lt;/a> stattfinden, weil es 24/7 läuft.&lt;/li>
&lt;li>Für die Auswertung und Anzeige soll Grafana genutzt werden, weil ich damit bereits länger arbeite.&lt;/li>
&lt;li>Ich wollte mich nicht selbst um die dauerhafte Speicherung kümmern. Prima, dass die Grafana Cloud einen umfangreichen Funktionsumfang kostenlos anbietet.&lt;/li>
&lt;/ul>
&lt;h2 id="umsetzung">Umsetzung&lt;/h2>
&lt;p>Ich bin relativ schnell auf &lt;a href="https://github.com/jeanralphaviles/prometheus_speedtest">prometheus_speedtest&lt;/a> gestoßen. Dabei handelt es sich um ein Python Package, welches Speedtest.net Ergebnisse als Prometheus Metrics Endpoints anbietet. Auch ein Container Image und passende K8s Manifests waren schon vorhanden.&lt;/p></description></item></channel></rss>