<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>unit-tests on gerrit.codes</title><link>https://gerrit.codes/tags/unit-tests/</link><description>Recent content in unit-tests on gerrit.codes</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><lastBuildDate>Sat, 12 Feb 2022 11:02:32 +0100</lastBuildDate><atom:link href="https://gerrit.codes/tags/unit-tests/index.xml" rel="self" type="application/rss+xml"/><item><title>Unit-Tests für IoC Container</title><link>https://gerrit.codes/posts/2022/02/unit-tests-fuer-ioc-container/</link><pubDate>Sat, 12 Feb 2022 11:02:32 +0100</pubDate><guid>https://gerrit.codes/posts/2022/02/unit-tests-fuer-ioc-container/</guid><description>Das Problem Wenn für eine Anwendung Dependency Injection (DI) genutzt wird und ein Inversion of Control (IoC) Container wie Autofac zum Einsatz kommt, kann es schnell passieren, dass nicht alle benötigten Komponenten registriert werden. Die Abhängigkeiten einer Klasse werden z.B. als Interface in den Constructor injiziert und fortan genutzt. Während der Entwicklung fällt dann nicht auf, dass die Abhängigkeit nicht aufgelöst werden kann, aber sobald die Anwendung gestartet und genutzt wird, kommt es zu Fehlermeldungen, die oft zum Absturz der Anwendung führen.</description></item></channel></rss>