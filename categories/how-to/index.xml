<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>how-to on gerrit.codes</title><link>https://gerrit.codes/categories/how-to/</link><description>Recent content in how-to on gerrit.codes</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><lastBuildDate>Tue, 03 Oct 2023 20:50:58 +0200</lastBuildDate><atom:link href="https://gerrit.codes/categories/how-to/index.xml" rel="self" type="application/rss+xml"/><item><title>Internet Monitoring (K8s+Grafana)</title><link>https://gerrit.codes/posts/2023/10/internet-monitoring-with-k8s-and-grafana/</link><pubDate>Tue, 03 Oct 2023 20:50:58 +0200</pubDate><guid>https://gerrit.codes/posts/2023/10/internet-monitoring-with-k8s-and-grafana/</guid><description>Motivation Nach dem Wechsel auf Glasfaser, hatte ich zwischendurch Ruckler beim Streaming. Das WLAN selbst war gut erreichbar. Das konnte ich mittels einer WLAN Analyzer App kontrollieren.
Die Daten zur Internetnutzung waren nicht ausreichend, um dort ein Problem feststellen zu können. Entsprechend habe ich selbst an einer Lösung gearbeitet, um die Internetgeschwindigkeit regelmäßig zu messen und sie visuell aufzubereiten.
Anforderungen Die Messung soll auf dem Raspberry Pi Kubernetes Cluster stattfinden, weil es 24/7 läuft.</description></item><item><title>Unit-Tests für IoC Container</title><link>https://gerrit.codes/posts/2022/02/unit-tests-fuer-ioc-container/</link><pubDate>Sat, 12 Feb 2022 11:02:32 +0100</pubDate><guid>https://gerrit.codes/posts/2022/02/unit-tests-fuer-ioc-container/</guid><description>Das Problem Wenn für eine Anwendung Dependency Injection (DI) genutzt wird und ein Inversion of Control (IoC) Container wie Autofac zum Einsatz kommt, kann es schnell passieren, dass nicht alle benötigten Komponenten registriert werden. Die Abhängigkeiten einer Klasse werden z.B. als Interface in den Constructor injiziert und fortan genutzt. Während der Entwicklung fällt dann nicht auf, dass die Abhängigkeit nicht aufgelöst werden kann, aber sobald die Anwendung gestartet und genutzt wird, kommt es zu Fehlermeldungen, die oft zum Absturz der Anwendung führen.</description></item><item><title>Lokales K8s im Internet verfügbar</title><link>https://gerrit.codes/posts/2022/01/k8s-tunnel-cloudflare/</link><pubDate>Sun, 30 Jan 2022 15:24:11 +0100</pubDate><guid>https://gerrit.codes/posts/2022/01/k8s-tunnel-cloudflare/</guid><description>Vorbereitungen Cloudflare bietet seit 2021 (siehe A Boring Announcement: Free Tunnels for Everyone) kostenlose Tunnels an. Damit können lokale Websites im Internet verfügbar gemacht werden. Benötigt wird nur eine Domain, bei der Cloudflare als Nameserver hinterlegt ist. Wie das genau geht, ist unter &amp;ldquo;Set up your first tunnel&amp;rdquo; beschrieben.
Tunnel für Services im Kubernetes Cluster Erstellte Tunnel können auch für Services in einem Kubernetes Cluster genutzt werden. Eine Anleitung mit Beispiel gibt es in meinem Fork von cloudflare/argo-tunnel-examples.</description></item><item><title>K8s Deployment visualisieren</title><link>https://gerrit.codes/posts/2022/01/k8s-deployment-visualisieren/</link><pubDate>Mon, 10 Jan 2022 07:24:32 +0100</pubDate><guid>https://gerrit.codes/posts/2022/01/k8s-deployment-visualisieren/</guid><description>Intro Um Deployments eines Kubernetes Clusters zu visualisieren, habe ich mir Pimoroni Blinkt LED Strips gekauft und sie auf die GPIO-Slots der RPi des Clusters gesteckt.
Demo Details Durch blinkt-controller wird ein Daemonset erstellt, welches auf die Labels blinkt und blinktColor von Pods reagiert. Damit die LEDs angesteuert werden können, laufen die Pods als cluster-admin. Weiteres unter &amp;ldquo;How it works&amp;rdquo; auf GitHub.
Vorbereitung In dem Video ist der Controller bereits eingerichtet.</description></item></channel></rss>